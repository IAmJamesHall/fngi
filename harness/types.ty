bitmap Instr [
\ name    var   msk
  sz1     0x00  0x30
  sz2     0x01  0x30
  sz4     0x02  0x30
  szA     0x02  0x30

  retz    0x01
  ret     0x02
  xl      0x84
  xw      0x85
  xsl     0x86
  xsw     0x87
]

bitmap Meta [
  fn         0x40 0xC0
  var        0x80 0xC0
  dict       0xC0 0xC0

  fn        0x40 0xC0
  fnPre     0x60
  fnLarge   0x50
  fnNormal  0x40 0x4C
  fnNow     0x44 0x4C
  fnSyn     0x48 0x4C
]

bitmap Lvl [
\ name    var   msk
  silent  0x00  0xFF

  \ User: 0b001X XXXX
  user    0x10
  trace   0x1F  0x5F
  debug   0x17  0x5F
  info    0x13  0x5F
  warn    0x11  0x5F
  crit    0x10  0x5F
]

struct WorkingStk [
  totalLen: Int
  data: Arr[Int]
]

struct LogEvent [ lvl: Lvl; msg: Bytes ]
struct FileEvent [ name: Bytes ]

struct DictEvent [
  key: Bytes
  value: Int
  ref: Int
  offset: Int
  meta: Meta
  isLocal: Int  \ bool
  isConst: Int  \ bool
]

struct ErrEvent [
  code: Int
  isCaught: Int \ bool
  ep: Int
  lineNo: Int
  data: Arr[Int]
  callStk: Bytes
  localsStkSz: Bytes
  localsStk: Bytes
]

struct JmpEvent [
  instr: Int
  jloc: Int
  ws: WorkingStk
  xDepth: Int
]

struct RetEvent [
  instr: Int
  jloc: Int
  ws: WorkingStk
  xDepth: Int
]

enum Event [
  log: LogEvent
  file: FileEvent
  dict: DictEvent
  err: ErrEvent
  jmp: JmpEvent
  ret: RetEvent
]
